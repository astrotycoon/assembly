From 3f0c39d07d0acff583bb71459d806bd31558d167 Mon Sep 17 00:00:00 2001
From: Pierre Chifflier <chifflier@cpe.fr>
Date: Sat, 13 Mar 2010 18:09:01 +0100
Subject: Add kfreebsd arch

Add support for kfreebsd-i386 and kfreebsd-amd64 with thanks to
Pierre Chifflier <chifflier@cpe.fr>.

Origin: vendor
Bug-Debian: http://bugs.debian.org/549100#37
Forwarded: http://lists.nongnu.org/archive/html/tinycc-devel/2010-04/msg00041.html
Reviewed-by: Romain Francoise <rfrancoise@debian.org>
Last-Update: 2010-04-20
---
 libtcc.c |   11 +++++++----
 tcc.h    |    4 ++--
 tccelf.c |   14 ++++++++------
 3 files changed, 17 insertions(+), 12 deletions(-)

diff --git a/libtcc.c b/libtcc.c
index 042d80e..31914f7 100644
--- a/libtcc.c
+++ b/libtcc.c
@@ -1473,7 +1473,7 @@ static int rt_get_caller_pc(unsigned long *paddr,
     int i;
 
     if (level == 0) {
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
         *paddr = uc->uc_mcontext.mc_eip;
 #elif defined(__dietlibc__)
         *paddr = uc->uc_mcontext.eip;
@@ -1482,7 +1482,7 @@ static int rt_get_caller_pc(unsigned long *paddr,
 #endif
         return 0;
     } else {
-#if defined(__FreeBSD__) 
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
         fp = uc->uc_mcontext.mc_ebp;
 #elif defined(__dietlibc__)
         fp = uc->uc_mcontext.ebp;
@@ -1508,7 +1508,7 @@ static int rt_get_caller_pc(unsigned long *paddr,
     int i;
 
     if (level == 0) {
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
         *paddr = uc->uc_mcontext.mc_rip;
         /* XXX: only support linux */
 #else
@@ -1516,7 +1516,7 @@ static int rt_get_caller_pc(unsigned long *paddr,
 #endif
         return 0;
     } else {
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
         fp = uc->uc_mcontext.mc_rbp;
 #else
         fp = uc->uc_mcontext.gregs[REG_RBP];
@@ -1821,6 +1821,9 @@ TCCState *tcc_new(void)
     tcc_define_symbol(s, "__INTEL_COMPILER", NULL);
 #undef str
 #endif
+#if defined(__FreeBSD_kernel__)
+    tcc_define_symbol(s, "__FreeBSD_kernel__", NULL);
+#endif
 #if defined(__linux)
     tcc_define_symbol(s, "__linux__", NULL);
     tcc_define_symbol(s, "__linux", NULL);
diff --git a/tcc.h b/tcc.h
index 4986d26..4eccd23 100644
--- a/tcc.h
+++ b/tcc.h
@@ -701,8 +701,8 @@ enum tcc_token {
   #define strtof (float)strtod
   #define strtoll (long long)strtol
 #endif
-#elif defined(TCC_UCLIBC) || defined(__FreeBSD__) || defined(__DragonFly__) \
-    || defined(__OpenBSD__)
+#elif defined(TCC_UCLIBC) || defined(__FreeBSD__) || defined(__FreeBSD_kernel__) \
+    || defined(__DragonFly__) || defined(__OpenBSD__)
 /* currently incorrect */
 long double strtold(const char *nptr, char **endptr)
 {
diff --git a/tccelf.c b/tccelf.c
index 5463c5f..11ee951 100644
--- a/tccelf.c
+++ b/tccelf.c
@@ -1274,6 +1274,8 @@ static void tcc_add_linker_symbols(TCCState *s1)
 /* name of ELF interpreter */
 #if defined __FreeBSD__
 static char elf_interp[] = "/libexec/ld-elf.so.1";
+#elif defined __FreeBSD_kernel__
+static char elf_interp[] = "/lib/ld.so.1";
 #elif defined TCC_ARM_EABI
 static char elf_interp[] = "/lib/ld-linux.so.3";
 #elif defined(TCC_TARGET_X86_64)
@@ -1306,7 +1308,7 @@ static void tcc_output_binary(TCCState *s1, FILE *f,
     }
 }
 
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 #define	HAVE_PHDR	1
 #define	EXTRA_RELITEMS	14
 
@@ -1716,7 +1718,7 @@ int elf_output_file(TCCState *s1, const char *filename)
                     }
                     /* update dynamic relocation infos */
                     if (s->sh_type == SHT_RELX) {
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
                         if (!strcmp(strsec->data + s->sh_name, ".rel.got")) { // rel_size == 0) {
                             rel_addr = addr;
 			    rel_size += s->sh_size;	// XXX only first rel.
@@ -1757,7 +1759,7 @@ int elf_output_file(TCCState *s1, const char *filename)
         if (interp) {
             ph = &phdr[0];
 
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 	    {
 		int len = phnum * sizeof(ElfW(Phdr));
 
@@ -1872,7 +1874,7 @@ int elf_output_file(TCCState *s1, const char *filename)
             put_dt(dynamic, DT_RELASZ, rel_size);
             put_dt(dynamic, DT_RELAENT, sizeof(ElfW_Rel));
 #else
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
             put_dt(dynamic, DT_PLTGOT, s1->got->sh_addr);
             put_dt(dynamic, DT_PLTRELSZ, rel_size);
             put_dt(dynamic, DT_JMPREL, rel_addr);
@@ -1978,7 +1980,7 @@ int elf_output_file(TCCState *s1, const char *filename)
         ehdr.e_ident[4] = TCC_ELFCLASS;
         ehdr.e_ident[5] = ELFDATA2LSB;
         ehdr.e_ident[6] = EV_CURRENT;
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
         ehdr.e_ident[EI_OSABI] = ELFOSABI_FREEBSD;
 #endif
 #ifdef TCC_TARGET_ARM
@@ -2016,7 +2018,7 @@ int elf_output_file(TCCState *s1, const char *filename)
         for(i=1;i<s1->nb_sections;i++) {
             s = s1->sections[section_order[i]];
             if (s->sh_type != SHT_NOBITS) {
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 		if (s->sh_type == SHT_DYNSYM)
 		    patch_dynsym_undef(s1, s);
 #endif
-- 
1.7.5.4

